---
import { Image } from 'astro:assets';

interface ContributionDay {
  date: string;
  contributionCount: number;
  color: string;
}

interface Week {
  contributionDays: ContributionDay[];
}

interface ContributionCalendar {
  totalContributions: number;
  weeks: Week[];
}

const GITHUB_TOKEN = import.meta.env.GITHUB_TOKEN;
const GITHUB_USERNAME = import.meta.env.GITHUB_USERNAME;

const query = `
  query($username: String!) {
    user(login: $username) {
      contributionsCollection {
        contributionCalendar {
          totalContributions
          weeks {
            contributionDays {
              date
              contributionCount
              color
            }
          }
        }
      }
    }
  }
`;

const response = await fetch('https://api.github.com/graphql', {
  method: 'POST',
  headers: {
    'Authorization': `Bearer ${GITHUB_TOKEN}`,
    'Content-Type': 'application/json',
  },
  body: JSON.stringify({
    query,
    variables: {
      username: GITHUB_USERNAME
    }
  })
});

const data = await response.json();
const contributions: ContributionCalendar = data.data.user.contributionsCollection.contributionCalendar;

---

<div class="github-contributions">
  <div class="contributions-grid grid grid-cols-53 gap-1">
    {contributions.weeks.map((week: Week) => (
      week.contributionDays.map((day: ContributionDay) => (
        <div
          class="contribution-day w-3 h-3 rounded-sm grayscale-100"
          style={`background-color: ${day.color}`}
          title={`${day.date}: ${day.contributionCount} contributions`}
        />
      ))
    ))}
  </div>
</div>

<style>
  .contributions-grid {
    display: grid;
    grid-template-columns: repeat(53, 1fr);
    gap: 2px;
  }
</style>
