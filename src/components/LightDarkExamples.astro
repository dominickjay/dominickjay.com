---
interface Props {
  type: 'basic' | 'card' | 'form' | 'nav';
}

const { type } = Astro.props;
---

{type === 'basic' && (
  <div x-data="{ isDark: false }"
       :class="{ 'dark': isDark }"
       class="p-4 rounded-lg transition-colors duration-300"
       style="background-color: light-dark(#ffffff, #1a1a1a); color: light-dark(#333333, #e0e0e0);">
    <button @click="isDark = !isDark"
            class="px-4 py-2 rounded"
            style="background-color: light-dark(#f0f0f0, #2a2a2a); color: light-dark(#333333, #e0e0e0);">
      Toggle Theme
    </button>
    <p class="mt-4">This text color and background will automatically switch based on the theme.</p>
  </div>
)}

{type === 'card' && (
  <div x-data="{ isDark: false }"
       :class="{ 'dark': isDark }"
       class="max-w-md mx-auto">
    <div class="p-6 rounded-lg shadow-lg transition-colors duration-300"
         style="background-color: light-dark(#ffffff, #1a1a1a);
                border: 1px solid light-dark(#e0e0e0, #333333);">
      <h3 class="text-xl font-bold mb-4"
          style="color: light-dark(#1a1a1a, #ffffff);">
        Card Title
      </h3>
      <p class="mb-4"
         style="color: light-dark(#333333, #e0e0e0);">
        This card demonstrates how light-dark() can be used for various elements.
      </p>
      <button @click="isDark = !isDark"
              class="px-4 py-2 rounded transition-colors duration-300"
              style="background-color: light-dark(#f0f0f0, #2a2a2a);
                     color: light-dark(#333333, #e0e0e0);
                     border: 1px solid light-dark(#cccccc, #404040);">
        Toggle Theme
      </button>
    </div>
  </div>
)}

{type === 'form' && (
  <div x-data="{ isDark: false }"
       :class="{ 'dark': isDark }"
       class="max-w-md mx-auto p-6">
    <form class="space-y-4">
      <div>
        <label class="block mb-2"
               style="color: light-dark(#333333, #e0e0e0);">
          Email
        </label>
        <input type="email"
               class="w-full px-4 py-2 rounded border transition-colors duration-300"
               style="background-color: light-dark(#ffffff, #2a2a2a);
                      color: light-dark(#333333, #e0e0e0);
                      border-color: light-dark(#cccccc, #404040);">
      </div>
      <button type="submit"
              class="px-4 py-2 rounded transition-colors duration-300"
              style="background-color: light-dark(#f0f0f0, #2a2a2a);
                     color: light-dark(#333333, #e0e0e0);
                     border: 1px solid light-dark(#cccccc, #404040);">
        Submit
      </button>
    </form>
    <button @click="isDark = !isDark"
            class="mt-4 px-4 py-2 rounded transition-colors duration-300"
            style="background-color: light-dark(#f0f0f0, #2a2a2a);
                   color: light-dark(#333333, #e0e0e0);">
      Toggle Theme
    </button>
  </div>
)}

{type === 'nav' && (
  <div x-data="{ isDark: false }"
       :class="{ 'dark': isDark }"
       class="w-full">
    <nav class="p-4 transition-colors duration-300"
         style="background-color: light-dark(#ffffff, #1a1a1a);
                border-bottom: 1px solid light-dark(#e0e0e0, #333333);">
      <div class="flex justify-between items-center">
        <a href="#"
           class="text-xl font-bold"
           style="color: light-dark(#1a1a1a, #ffffff);">
          Logo
        </a>
        <div class="space-x-4">
          <a href="#"
             class="hover:underline"
             style="color: light-dark(#333333, #e0e0e0);">
            Home
          </a>
          <a href="#"
             class="hover:underline"
             style="color: light-dark(#333333, #e0e0e0);">
            About
          </a>
          <button @click="isDark = !isDark"
                  class="px-4 py-2 rounded transition-colors duration-300"
                  style="background-color: light-dark(#f0f0f0, #2a2a2a);
                         color: light-dark(#333333, #e0e0e0);">
            Toggle Theme
          </button>
        </div>
      </div>
    </nav>
  </div>
)}

<script>
  // Alpine.js will handle the interactivity
</script>
